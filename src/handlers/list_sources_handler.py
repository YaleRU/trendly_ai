from pyrogram.types import Message
from pyrogram.enums import ParseMode
from src.database import db, SourceType
from src.commands import CommandAlias
import logging

logger = logging.getLogger(__name__)


async def list_sources_handler(_client, message: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π –ø–æ —Ç–∏–ø–∞–º"""
    try:
        user_id = message.from_user.id

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
        sources = db.get_user_sources(user_id)

        if not sources:
            await message.reply_text(
                "üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.\n\n"
                "–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–æ–π /" + CommandAlias.add_source.value
            )
            return

        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –ø–æ —Ç–∏–ø—É
        sources_by_type = {}
        for source in sources:
            source_type = source['type']
            if source_type not in sources_by_type:
                sources_by_type[source_type] = []
            sources_by_type[source_type].append(source)

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        response = "üìö <b>–í–∞—à–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏:</b>\n\n"

        for source_type, type_sources in sources_by_type.items():
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
            type_icon = "üîπ"
            if source_type == SourceType.Telegram.value:
                type_icon = "üì¢"
            elif source_type == SourceType.RSS.value:
                type_icon = "üì°"
            elif source_type == SourceType.Web.value:
                type_icon = "üåê"

            response += f"{type_icon} <b>{source_type.upper()}</b>:\n"

            for i, source in enumerate(type_sources, 1):
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å, –∏–ª–∏ –æ–±—Ä–µ–∑–∞–µ–º URL
                # TODO: source['title'] or
                display_text = source['target']
                if len(display_text) > 40:
                    display_text = display_text[:37] + "..."

                response += f"   {i}. {display_text}\n"
                response += f"      ID: {source['id']}, URL: {source['target']}\n"

            response += "\n"

        response += (
                "\nüí° <b>–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</b>\n"
                "/" + CommandAlias.add_source.value + " [—Ç–∏–ø] [url] - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫\n"
                                                      "/" + CommandAlias.remove_source.value + " [id] - —É–¥–∞–ª–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫\n"
                                                                                               "/" + CommandAlias.source_info.value + " [id] - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏—Å—Ç–æ—á–Ω–∏–∫–µ"
        )

        # –†–∞–∑–±–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏, –µ—Å–ª–∏ –æ–Ω–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ
        max_length = 4096  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
        if len(response) > max_length:
            parts = []
            current_part = ""

            for line in response.split('\n'):
                if len(current_part) + len(line) + 1 > max_length:
                    parts.append(current_part)
                    current_part = line + '\n'
                else:
                    current_part += line + '\n'

            if current_part:
                parts.append(current_part)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–∞—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
            for part in parts:
                await message.reply_text(part, parse_mode=ParseMode.HTML, disable_web_page_preview=True)
        else:
            await message.reply_text(response, parse_mode=ParseMode.HTML, disable_web_page_preview=True)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /{CommandAlias.list_sources.value}: {e}")
        await message.reply_text(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
