import logging

from pyrogram import filters, Client
from pyrogram.types import Message

from src.db import SessionLocal
from src.utils.digest_sender import send_digest_to_user
from .common import get_user_by_telegram_id_safe

logger = logging.getLogger(__name__)


async def digest_handler(bot_client: Client, message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–∫–∞–∑–∞ –¥–∞–π–¥–∂–µ—Å—Ç–∞"""
    try:
        db = SessionLocal()
        user = await get_user_by_telegram_id_safe(message, message.from_user.id)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–π–¥–∂–µ—Å—Ç
        success = await send_digest_to_user(bot_client, db, user.id, user.chat_id)

        if not success:
            await message.reply_text(
                "üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –Ω–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π.\n\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —Å –ø–æ–º–æ—â—å—é /add_source"
            )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ –¥–∞–π–¥–∂–µ—Å—Ç–∞: {e}")
        await message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–∞–π–¥–∂–µ—Å—Ç–∞.")

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
# TODO: –ï—â–µ –º–æ–∂–Ω–æ –≤–æ—Ç –ø—Ä–∏–±–∏–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã
# digest_filter = filters.command(["digest", "news", "–¥–∞–π–¥–∂–µ—Å—Ç"]) & filters.private
